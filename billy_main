#!/bin/bash

# gg(:0) : 快速跳转到开头
# G (:$) : 快速跳转到末尾

usage()
{
	local tools_name=$(basename $0)
	printf "
	Usage : ./${tools_name} [Options]  Actions
	Options:
		-l  , --listp    : List the available
		-h,  -help    : Print this message and exit.
	example:
		== autommi ==
		-m  		:	autommi测试
		== cpu freq ==
		-c			:	CPU freq相关
		== pc info ==
		-d dmidecode	:	查看主板 内存 信息
		== ftrace log ==
		-f ftrace       : 	ftrace
		== analyze ftrace ==
		-analyze      	: 	解析ftrace
		== html systemtrace ==
		-html systrace  : 	systrace
		== so ==
		-so -addr2line 	:		分析定位so库pc错误
		-so -addr2line so add str 
		== io desk ==
		-io 		:		修改优化io性能
		== (Window) CRLF <-> LF (Linux) ===
		-win file 		:  转换window回车符
		-lin file		:　转换linux 回车符
		== UltralEdit_crack ==
		-uex			: 	UltralEdit试用
		== down code ==
		-down project	:  下载项目源代码
		== grep audio log ==
		-grep			: 	过滤 kernel main sys audio log
		== kernel_log_converter ==
		-converter -i file	: 	转换kernel log android 时间
		-converter -h		: 	转换kernel log android 时间帮助
		== reset code ==
		-reset code_version 	: 	复位代码流
		== android build env ==
		-android  		:	android编译环境
		== build mtk android ==
		-build -enabledebug		        :	开启audioParamParser debug模式
		-build -fix		                :	修复编译sort排序错误
		-build -l  		                :	编译android 项目列表
		-build -h  		                :	编译android 帮助
		-build -v user CSW1707A_1201 -n :	全新编译android
		== logcat all log ==
        -adb                            :   抓取所有log
	Actions:
"
}

error()
{
    local ret="$1";shift
    local info="$@"
    if [ "$ret" -ne 0 ];then
        echo "Error $ret: $info" >&2
        exit $ret
    fi
}
android_8_build_env()
{
sudo apt-get update
sudo apt-get install openjdk-8-jdk
sudo apt-get install libx11-dev:i386 libreadline-dev:i386 libgl1-mesa-dev g++-multilib
sudo apt-get install -y git flex bison gperf build-essential libncurses5-dev:i386
sudo apt-get install tofrodos python-markdown libxml2-utils xsltproc zlib1g-dev:i386
sudo apt-get install dpkg-dev libsdl1.2-dev
sudo apt-get install gnupg flex bison gperf build-essential
sudo apt-get install zip curl zlib1g-dev gcc-multilib g++-multilib
sudo apt-get install libc6-dev-i386
sudo apt-get install lib32ncurses5-dev x11proto-core-dev libx11-dev
sudo apt-get install libgl1-mesa-dev libxml2-utils xsltproc unzip m4
sudo apt-get install lib32z1-dev ccache

sudo apt-get install libswitch-perl
sudo apt-get install libxml2-utils

sudo apt-get install android-tools-adb

sudo touch /etc/udev/rules.d/51-android.rules
sudo sh -c 'echo "# MTK" > /etc/udev/rules.d/51-android.rules'
sudo sh -c 'echo "SUBSYSTEM=="usb", ATTR{idVendor}=="0e8d", MODE="0666", GROUP="plugdev"" >> /etc/udev/rules.d/51-android.rules'
sudo service udev restart

git config --global user.name "Billy.Wang"
git config --global user.email "wangbb@chenyee.com"
#echo "export LC_ALL=C" >> ~/.bashrc
}

UltralEdit_crack()
{
    rm ~/.idm -rf
    rm /tmp/*.spl -rf
    ln -s ~/bin/shell_test/txt.uew ~/.idm/uex/wordfiles
}

reset_code()
{
	if [ -n "$2" ];then
		echo "repo forall -c 'git clean -d -f' && repo forall -c 'git reset --hard origin/$2' && repo forall -c 'git remote update' && repo sync #&& rm -rf out/"
		#repo forall -c 'git clean -d -f' && repo forall -c 'git reset --hard origin/$2' && repo forall -c 'git remote update' && repo sync --force-sync --no-tags #&& rm -rf out/
		repo forall -c 'git reset --hard origin/$2' && repo forall -c 'git clean -f -d -x' && repo sync --force-sync --no-tags #&& rm -rf out/
	else
		echo "not select code origin patch example cy_o1.mp1"
		echo "usage: $0 $1 cy_01.mp1 "
		echo "repo forall -c 'git reset --hard' && repo forall -c 'git reset clean -f -d -x' && repo sync --no-tags #&& rm -rf out/"
        
        if [ -d ../.repo/manifests ];then
            echo "***$?***"
            cd ../.repo/manifests
        else
            echo kk
            cd .repo/manifests
        fi
        git stash
        git clean -dxf
        cd -
        repo forall -c 'git merge --abort'
        #repo forall -c 'git reset --hard' 
        repo forall -c 'git clean -fdx' 
        repo sync --force-sync --no-tags 
        #rm -rf out/
        repo forall -c 'git branch' 
		exit 2
	fi

}

grep_audio_log()
{
    local newfile kernelfile mainfile sysfile i
    local audio_kernel_tag='audio|Aud|AUD|Lineout_|writer|keycode|stream|speech_|mtk_pcm_|accdet|Headset|mtk_voice|pmic_thread|modem_|PMIC_INT|pmic_auxadc|mt_get_auxadc_value|mic_vinp_mv'
    local audio_main_tag="audio|Audio|SpeechDriver|onScreenTurned|music_app|MediaPlayer|PhoneWindow|WindowManager|FmService|FMLIB|FMText|AudioHeadSetMessager|MMITest|Media|Bluetooth|bt_|BtGatt|MtkOmx|OMX|GainTableParamParser|NVRAM|SRS_|audiofocus|aurisys|InCall|setForceUse|Dialer|Ringtone|Extractor|NuPlayer|GenericSource|Event|pause|ACodec|MPEG4Writer"
    local audio_sys_tag="EarphoneLoopbackTest|WiredAccessoryManager|Telecom"
    local audio_volume_tag="setParameters|adjustSuggestedStreamVolume|setStreamVolumeIndex|setVolume|AudioFocus|writeEvent|volumeIndex|applyDeviceVolumemStreamType|AudioALSAVolumeController|volumeDevice|setVoiceVolume|keyCode|mAudioMode|setMicMute|setDataSource|createTrack_l|AudioMTKGainController|SpeechDriverNormal|AudioTrack: set()"

    for file in `ls`
    do
        mv $file ${file}.log
        #newfile=`echo $file | sed 's/...$/.log/'`
        #echo $newfile
        #mv $file $newfile
    done

    for kernelfile in `find . -name 'kernel*'`
    do
      i=$[i+1]
      #echo $kernelfile $i
      grep -E "$audio_kernel_tag" $kernelfile > kernel_audio_$i.log
    done
 
    i=0

    for mainfile in `find . -name 'main*'`
    do
      i=$[i+1]
      #echo $mainfile $i
      grep -E "$audio_main_tag" $mainfile > main_audio_$i.log
      grep -E "$audio_volume_tag" $mainfile > main_audio_volume_$i.log
    done

    i=0

    for sysfile in `find . -name 'sys*'`
    do
      i=$[i+1]
      #echo $sysfile $i
      grep -E "$audio_sys_tag" $sysfile > sys_audio_$i.log
    done

if false;then
    while true 
    do
        case "$2" in
            main)
		if [ -n "$3" ]; then
			grep -E "$audio_main_tag" $3 > audio.log
		else
    			echo "$0 $2 logfile"
		fi
            	exit 0
            	;;
            kernel)
		if [ -n "$3" ]; then
			grep -E "$audio_kernel_tag" $3 > kernel.log
		else
    			echo "$0 $2 logfile"
		fi
            	exit 0
            	;;
            sys)
		if [ -n "$3" ]; then
			grep -E "$audio_sys_tag" $3 > sys.log
		else
			echo "$0 $2 logfile"
		fi
		exit 0
		;;
	    *)
            	usage
            	exit 1
            	;;
	esac
    done
fi
}

down_mtk_code()
{
	#PROJECT=CSW1705

	PROJECT=$2
	#if [ ! -n "$PROJECT" ];then
	#if [ ! $PROJECT ];then
	if [ "$PROJECT" == "" ];then
   		echo "usage: $0 <project> "
   		echo " $0 CSW1705"
   		exit 2
	fi
	
	if [ "$PROJECT" == "CSW1707" ];then
		#code_origin=cy_o1.mp6
        #code_dev=_V1.25_1707_T0413_dev
		code_origin=cy_o1.mp6
        code_dev=-V1.15
        package_dev=_mp
	elif [ "$PROJECT" == "SW17W16" ];then
		code_origin=cy_o0.mp1
        code_dev=
        package_dev=
	elif [[ "$PROJECT" == "CSW1705_P" ]] || [[ "$PROJECT" == "CSW1805" ]] || [[ "$PROJECT" == "CSW1809" ]];then
		code_origin=cy_p0.mp1
        code_dev=
        package_dev=
	else
		code_origin=cy_o1.mp1
        code_dev=
        package_dev=-V1.54
	fi

	echo $code_origin
	echo "down load $PROJECT android"

	if [[ "$PROJECT" == "CSW1705_P" ]] || [[ "$PROJECT" == "CSW1805" ]]  || [[ "$PROJECT" == "CSW1809" ]];then
	    mkdir -p /home/billy/work/${PROJECT}/alps
	    cd /home/billy/work/${PROJECT}/alps
	    echo "repo init -u ssh://wangbb@18.8.3.13:29418/P/manifest -b ${code_origin} -m ${code_origin}${code_dev}.xml --no-repo-verify"
	    repo init -u ssh://wangbb@18.8.3.13:29418/P/manifest -b ${code_origin} -m ${code_origin}${code_dev}.xml --no-repo-verify
    else
	    mkdir -p /home/billy/work/${PROJECT}/alps/${code_origin}
	    cd /home/billy/work/${PROJECT}/alps
        echo "repo init -u ssh://wangbb@18.8.3.13:29418/mtk/manifest -b ${code_origin} -m ${code_origin}${code_dev}.xml --no-repo-verify"
        repo init -u ssh://wangbb@18.8.3.13:29418/mtk/manifest -b ${code_origin} -m ${code_origin}${code_dev}.xml --no-repo-verify
    fi
    repo sync --no-tags
	#repo start master --all
	repo start ${code_origin} --all

	cd /home/billy/work/${PROJECT}/alps/${code_origin}
	repo forall -c "scp -p -P 29418 wangbb@18.8.3.13:hooks/commit-msg .git/hooks/"

if false;then
	if [ "$PROJECT" == "CSW1705_P" ];then
        mv ~/work/${PROJECT}/alps/${code_origin} ~/work/${PROJECT}/alps/${code_origin}_
        mkdir -p ~/work/${PROJECT}/alps/${code_origin}

        mv ~/work/${PROJECT}/alps/${code_origin}_/android_mtk_p0_mp2/* ~/work/${PROJECT}/alps/${code_origin}
        #mv ~/work/${PROJECT}/alps/${code_origin}_/.repo ~/home/billy/work/${PROJECT}/alps
        #rm -rf ~/work/${PROJECT}/alps/${code_origin}_
    fi
fi

if false;then
#if true;then
	echo "down packages"
	mkdir -p /home/billy/work/${PROJECT}/chenyee_rom_apk
	cd /home/billy/work/${PROJECT}/chenyee_rom_apk

	if [[ "$PROJECT" == "CSW1705_P" ]] || [[ "$PROJECT" == "CSW1805" ]] || [[ "$PROJECT" == "CSW1809" ]];then
	    repo init -u ssh://wangbb@18.8.3.13:29418/P/manifest -b chenyee_rom_apk -m CSW1705_master.xml --no-repo-verify
    else
	    repo init -u ssh://wangbb@18.8.3.13:29418/151/manifest -b chenyee_rom_apk -m ${PROJECT}_oversea${package_dev}.xml --no-repo-verify
    fi

    repo sync --no-tags
	repo start master --all
fi

	echo "build "
	cd /home/billy/work/${PROJECT}/alps/${code_origin}
	#./TmakeChenyee -v userdebug CSW1705TL_1301 -n
	#./TmakeChenyee -v userdebug CSW1803A_1291 -n
	#./TmakeChenyee -v userdebug CSW1707A_1201_TEST -n
}

dmidecode()
{

    while true 
    do
        case "$2" in
            dmidecode)
            echo "***** 查看主板信息 *****" 
			sudo dmidecode -t 2
            echo "***** 查看内存信息 *****"
			sudo dmidecode -t 16
            exit 0
            ;;
	    *)
            usage
            exit 1
            ;;
	esac
    done
}

ftrace()
{
adb shell "ls -l /sys/kernel/debug/tracing/"
#echo README               free_buffer         saved_tgids   trace_options
#echo available_events     instances           set_event     trace_pipe          
#echo available_tracers    options             set_event_pid tracing_cpumask     
#echo buffer_size_kb       per_cpu             snapshot      tracing_max_latency 
#echo buffer_total_size_kb printk_formats      trace         tracing_on          
#echo current_tracer       saved_cmdlines      trace_clock   tracing_thresh      
#echo events               saved_cmdlines_size trace_marker  
echo 
#adb shell cat /sys/kernel/debug/tracing/README > /home/billy/work/tracing_README

adb shell "echo 16384 > /sys/kernel/debug/tracing/buffer_size_kb"
echo "buffer_size_kb(per cpu): "
adb shell "cat /sys/kernel/debug/tracing/buffer_size_kb"
echo "buffer_total_size_kb(per cpu): "
adb shell "cat /sys/kernel/debug/tracing/buffer_total_size_kb"

#echo "设置或显示当前使用的跟踪器, 缺省值为 nop ，即不做任何跟踪操作"
#adb shell "cat /sys/kernel/debug/tracing/current_tracer"
#adb shell "echo function > /sys/kernel/debug/tracing/current_tracer"

adb shell "echo nop > /sys/kernel/debug/tracing/current_tracer" >/dev/null 2>&1
#current_tracer用于设置或显示当前使用的跟踪器；使用 echo 将跟踪器名字写入该文件可以切换到不同的跟踪器。系统启动后，其缺省值为 nop ，即不做任何跟踪操作。在执行完一段跟踪任务后，可以通过向该文件写入 nop 来重置跟踪器。

#echo "当前编译进内核的跟踪器的列表"
#adb shell cat /sys/kernel/debug/tracing/available_tracers
#available_tracers记录了当前编译进内核的跟踪器的列表，可以通过 cat 查看其内容；其包含的跟踪器与图 3 中所激活的选项是对应的。写 current_tracer 文件时用到的跟踪器名字必须在该文件列出的跟踪器名字列表中。

adb shell "echo 'norecord-cmd noprint-tgid' > /sys/kernel/debug/tracing/trace_options" >/dev/null 2>&1
#rem adb shell "echo 'noirq-info' > /sys/kernel/debug/tracing/trace_options"

#adb shell "echo 1 > /sys/kernel/debug/tracing/events/system"

#adb shell "echo 'sched_switch sched_wakeup sched_wakeup_new sched_migrate_task softirq_raise softirq_entry softirq_exit cpu_frequency workqueue_execute_start workqueue_execute_end block_bio_frontmerge block_bio_backmerge block_rq_issue block_rq_insert block_rq_complete ipi sched_heavy_task mtk_events' > /sys/kernel/debug/tracing/set_event"

adb shell "echo 'sched_switch sched_wakeup sched_wakeup_new sched_migrate_task softirq_raise softirq_entry softirq_exit cpu_frequency workqueue workqueue_execute_start workqueue_execute_end block_bio_frontmerge block_bio_backmerge block_rq_issue block_rq_insert block_rq_complete ipi sched_heavy_task mtk_events irq irq_handler_entry irq_handler_exit timer_expire_entry hrtimer_init hrtimer_start hrtimer_expire_entry hrtimer_expire_exit timer hrtimer rcu:*' > /sys/kernel/debug/tracing/set_event"


#rem just in case tracing_enabled is disabled by user or other debugging tool
adb shell "echo 1 > /sys/kernel/debug/tracing/tracing_enabled" >/dev/null 2>&1
adb shell "echo 0 > /sys/kernel/debug/tracing/tracing_on"

#rem erase previous recorded trace
adb shell "echo > /sys/kernel/debug/tracing/trace"

echo "start mtklog and del /sdcard/mtklog folder"
echo "stop mtklog"
adb shell "am broadcast -a com.mediatek.mtklogger.ADB_CMD -e cmd_name stop --ei cmd_target 1" >/dev/null 2>&1
adb shell "rm -rf /sdcard/mtklog"
adb shell "am broadcast -a com.mediatek.mtklogger.ADB_CMD -e cmd_name start --ei cmd_target 1" >/dev/null 2>&1
#adb shell "am start com.mediatek.mtklogger/.MainActivity" >/dev/null 2>&1

echo press any key to start capturing...
read

adb shell "echo 1 > /sys/kernel/debug/tracing/tracing_on"

echo "Start recordng ftrace data"
echo "Press any key to stop..."
read

adb shell "echo 0 > /sys/kernel/debug/tracing/tracing_on"
echo "Recording stopped..."

sleep 5
echo "stop mtklog"
adb shell "am broadcast -a com.mediatek.mtklogger.ADB_CMD -e cmd_name stop --ei cmd_target 1" >/dev/null 2>&1

adb shell cat /sys/kernel/debug/tracing/trace > /home/billy/work/ftrace/SYS_FTRACE
#adb pull /sys/kernel/debug/tracing/trace > /home/billy/work/ftrace/SYS_FTRACE

adb shell "echo norecord-cmd > /sys/kernel/debug/tracing/trace_options" >/dev/null 2>&1
adb shell "echo noprint-tgid > /sys/kernel/debug/tracing/trace_options" >/dev/null 2>&1
adb shell "echo 1 > /sys/kernel/debug/tracing/tracing_on"
adb shell "echo > /sys/kernel/debug/tracing/set_event"

echo "default size"
#rem default size
adb shell "echo 4096 > /sys/kernel/debug/tracing/buffer_size_kb"
adb shell "cat /sys/kernel/debug/tracing/buffer_size_kb"

adb pull /sdcard/mtklog /home/billy/work/ftrace/mtklog >/dev/null 2>&1

echo "Please press 02-parse.bat to analyze it with gtkwave and csv file"
#pause
#read

}

analyze_ftrace()
{
FTRACE_PERL_PATH=/home/billy/bin/mtk/ftrace_perl
SYS_FTRACE_PATH=/home/billy/work/ftrace

#perl $FTRACE_PERL_PATH/fix_cmd.pl $SYS_FTRACE_PATH/SYS_FTRACE
#perl $FTRACE_PERL_PATH/convert2vcd.pl $SYS_FTRACE_PATH/SYS_FTRACE $SYS_FTRACE_PATH/trace.vcd
#perl $FTRACE_PERL_PATH/ftrace_cputime.pl $SYS_FTRACE_PATH/SYS_FTRACE $SYS_FTRACE_PATH/ftrace_cputime.csv
#perl $FTRACE_PERL_PATH/convert2systrace.4_3.pl <$SYS_FTRACE_PATH/SYS_FTRACE >$SYS_FTRACE_PATH/trace.html

perl $FTRACE_PERL_PATH/fix_cmd.pl $SYS_FTRACE_PATH/SYS_FTRACE
perl -I$FTRACE_PERL_PATH/lib/mediatek $FTRACE_PERL_PATH/trim_events.pl < $SYS_FTRACE_PATH/SYS_FTRACE > $SYS_FTRACE_PATH/SYS_FTRACE.trimmed.log
perl -I$FTRACE_PERL_PATH/lib/mediatek $FTRACE_PERL_PATH/convert2vcd.pl $SYS_FTRACE_PATH/SYS_FTRACE.trimmed.log $SYS_FTRACE_PATH/trace.vcd
perl -I$FTRACE_PERL_PATH/lib/mediatek $FTRACE_PERL_PATH/ftrace_cputime.pl $SYS_FTRACE_PATH/SYS_FTRACE.trimmed.log $SYS_FTRACE_PATH/ftrace_cputime.csv
perl $FTRACE_PERL_PATH/trim_tgid.pl < $SYS_FTRACE_PATH/SYS_FTRACE.trimmed.log > $SYS_FTRACE_PATH/SYS_FTRACE.trimmed.trim_tgid.log 
perl -I$FTRACE_PERL_PATH/lib/mediatek $FTRACE_PERL_PATH/convert2systrace.M.pl SYS_FTRACE.trimmed.trim_tgid.log $SYS_FTRACE_PATH/trace.html

#perl -I$FTRACE_PERL_PATH/lib/mediatek $FTRACE_PERL_PATH/ftrace_loading.pl $SYS_FTRACE_PATH/SYS_FTRACE.trimmed.log $SYS_FTRACE_PATH/ftrace_

perl $FTRACE_PERL_PATH/trim_irq.pl < $SYS_FTRACE_PATH/SYS_FTRACE > $SYS_FTRACE_PATH/SYS_FTRACE.trim_irq.log
perl -I$FTRACE_PERL_PATH/lib/mediatek $FTRACE_PERL_PATH/convert2systrace.L.pl -s=$FTRACE_PERL_PATH/systrace.L $SYS_FTRACE_PATH/SYS_FTRACE.trim_irq.log $SYS_FTRACE_PATH/trace.L.html

#rm $SYS_FTRACE_PATH/SYS_FTRACE.trimmed.log $SYS_FTRACE_PATH/SYS_FTRACE.trimmed.trim_tgid.log $SYS_FTRACE_PATH/SYS_FTRACE.trim_irq.log

gtkwave $SYS_FTRACE_PATH/trace.vcd
}

new()
{
	cd /home/billy/work/SW17W16/alps/android_mtk_o_6737_p18
	echo "build user "
	#rm -rf out_user_a
	./TmakeChenyee -v userdebug SW17W16A_1201 -n
	#mv out out_user

	echo "build 1705"
	cd /home/billy/work/CSW1705/alps/cy_o1.mp1
	./TmakeChenyee CSW1705_64B_platform -n
}

autommitest()
{
	argv="$@"
	echo "$0 $1 $2"
	#adb devices > usbtmp
	#cat usbtmp | sed -n '2p'
	#cat usbtmp | sed -n '2p'
	#adb devices | sed -n '2p' | awk '{ print $1}'
	#cat filename.txt | awk '{ print $2 $4 }'
	#adb devices | awk '{ print $1 }'
	local deviceinfo=`adb devices | sed -n '2p' | awk '{ print $1}'`
	#echo $deviceinfo

    if [ -n "$deviceinfo" ];then
	#echo "***** volume 100% ******"
	#adb shell am start -a com.gionee.autommi.rc -e dura 3 -e volume 100
	sleep 1
	
    	while true 
    	do
		#if [ -z $2 ];then
		printf "
        1 key		:   按键测试
        2 spkdura	:   扬声器测试 
        3 spkdyna	:   扬声器扫频
        4 dura		:   听筒测试 
        5 dyna		:   听筒扫频
        6 ep2rc		:   耳麦到听筒
        7 ep2sp		:   耳麦到扬声器
        8 hs		:   耳机回路
        9 al		:   音频回路 (主麦到无麦耳机)
        0 am		:   副麦
        a stop		:   退出	
        b start		:   开启mtklog
        f fm		:   开启FM
		"
		local input=a
		read -p "Enter your chose:" input echo $input
		#fi
        case "$input" in
		1|key)
			echo "***** 按键检测 *****"
			adb shell am start -a com.gionee.autommi.key
			echo "input any key stop"
			read 
			adb shell am start -a com.gionee.autommi.dumb
			#exit 0
			;;
		2|spkdura)
			echo "***** 扬声器测试 *****" 
			adb shell am start -a com.gionee.autommi.sp -e dura 3
			echo "input any key stop"
			read 
			adb shell am start -a com.gionee.autommi.dumb
			#exit 0
			;;
		3|spkdyna)	
			echo "***** 扬声器扫频 *****"
			adb shell am start -a com.gionee.autommi.sp.dyna --ei level 5
			echo "input any key stop"
			read 
			adb shell am start -a com.gionee.autommi.dumb
			#exit 0
			;;
		4|dura)
			echo "***** 听筒测试 *****" 
			#adb shell -s $deviceinfo am start -a com.gionee.autommi.rc -e dura 3  
			adb shell am start -a com.gionee.autommi.rc -e dura 3  
			echo "input any key stop"
			read 
			adb shell am start -a com.gionee.autommi.dumb
			#exit 0
			;;
		5|dyna)
			echo "***** 听筒扫频 *****"
			adb shell am start -a com.gionee.autommi.rc.dyna --ei level 5
			echo "input any key stop"
			read 
			adb shell am start -a com.gionee.autommi.dumb
			#exit 0
			;;
		6|ep2rc)
			echo "***** 关闭主MIC *****"
			adb shell am start -a com.gionee.autommi.cmr -e state no
			sleep 1
			echo "***** 耳麦到听筒 *****"
			adb shell am start -a com.gionee.autommi.ep2rc --ei level 5 
			echo "input any key stop"
			read 
			adb shell am start -a com.gionee.autommi.dumb
			#exit 0
			;;
		7|ep2sp)
			echo "***** 关闭主MIC *****"
			adb shell am start -a com.gionee.autommi.cmr -e state no
			sleep 1
			echo "***** 耳麦到扬声器 *****"
			adb shell am start -a com.gionee.autommi.ep2sp --ei level 5
			echo "input any key stop"
			read 
			adb shell am start -a com.gionee.autommi.dumb
			#exit 0
			;;
		8|hs)
			echo "***** 关闭主MIC *****"
			adb shell am start -a com.gionee.autommi.cmr -e state no
			sleep 1
			echo "***** 耳机回路 *****"
			adb shell am start -a com.gionee.autommi.hs --ei level 5 
			echo "input any key stop"
			read 
			adb shell am start -a com.gionee.autommi.dumb
			#exit 0
			;;
		9|al)
			echo "***** 开启主MIC *****"
			adb shell am start -a com.gionee.autommi.cmr -e state yes
			sleep 1
            echo "***** 主麦到无麦耳机 *****"
			adb shell am start -a com.gionee.autommi.al --ei level 5 
			echo "input any key stop"
			read 
			adb shell am start -a com.gionee.autommi.dumb
			#exit 0
			;;
		0|am)
			echo "***** 副麦 *****"
			adb shell am start -a com.gionee.autommi.am --ei level 10 
			echo "input any key stop"
			read 
			adb shell am start -a com.gionee.autommi.dumb
			#exit 0
			;;
		a|stop)
			echo "***** 退出autommi *****"
			adb shell am start -a com.gionee.autommi.dumb 
			sleep 1
			#echo "stop mtklog"
			#adb shell "am broadcast -a com.mediatek.mtklogger.ADB_CMD -e cmd_name stop --ei cmd_target 1" >/dev/null 2>&1
			exit 0
			;;
		b|start)
			echo "**** 开启 mtklog *****"
			echo "start mtklog and del /sdcard/mtklog folder"
			adb shell "am broadcast -a com.mediatek.mtklogger.ADB_CMD -e cmd_name stop --ei cmd_target 1" >/dev/null 2>&1
			sleep 8
			adb shell "rm -rf /sdcard/mtklog"
			adb shell "am broadcast -a com.mediatek.mtklogger.ADB_CMD -e cmd_name start --ei cmd_target 1" >/dev/null 2>&1
			#exit 0
			;;
        f|fm)
            echo "**** FM 测试 *****"
            adb shell am start -a com.gionee.autommi.fm  -e fm 91.8
                        echo "input any key stop"
            read
            adb shell am start -a com.gionee.autommi.dumb
            #exit 0
            ;;
		*)
			usage
			exit 1
			;;
        esac
    done
	else
		echo "not inster usb!!"
	fi
}

cpu_freq()
{
 	argv="$@"
    echo "$0 $1 $2"
 	
	local deviceinfo=`adb devices | sed -n '2p' | awk '{ print $1}'`
	if [ -n "$deviceinfo" ];then
		while true 
		do
			printf "
			== cpu freq ==
			1 -g			:	查下CPU支持哪些governor的模式
			2 -d			:	看CPU支持哪些频率
			3 -freq		:	当前的频率有哪些
								当前所选择的频率
			4 -num		:	查看系统支持多少核数
			5 -cpu		:	查看当前状态有多少个CPU
			6 -performance	:	performance模式,最高频率,不降频
			7 -cpu0			:	开启cpu0 
			8 -cpu1			:	开启cpu1
			9 -cpu2			:	开启cpu2
			0 -cpu3			:	开启cpu3
			a stop 			: 	退出
			"
			local input=a
			read -p "Enter your chose:" input echo $input
        case "$input" in
		1|-g)
			echo "***** 查下CPU支持哪些governor的模式 *****" 
			echo "***	performance	:	最高频率,不降频 ***"
			echo "***	ondemand	:	动态调节频率,不会因为降频造成性能降低 ***"
			echo "***	interactive	:	交互模式，直接上最高频率，然后看CPU负荷慢慢降低，比较耗电 ***"
			echo "***	powersave	:	省电模式，通常以最低频率运行 ***"
			echo "***	userspace	:	自定义模式,允许其他用户程序调节CPU频率 ***"
			#adb shell -s $deviceinfo cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors
			adb shell cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors
           	#exit 0
            ;;
		2|-d)
			echo "***** 看CPU支持哪些频率 *****"
			adb shell cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
			#exit 0
			;;
		3|-freq)
			echo "	***** 当前的频率有哪些 *****"
			adb shell cat /proc/cpufreq/cpufreq_ptpod_freq_volt
			echo "	***** 当前所选择的频率 *****"
			adb shell cat /proc/cpufreq/cpufreq_oppidx 
			#exit 0
			;;
		4|-num)
			echo "***** 查看系统支持多少核数 *****"
			adb shell cat /sys/devices/system/cpu/present
			#exit 0
			;;
		5|-cpu)
			echo "***** 查看当前状态有多少个CPU *****"
			adb shell cat sys/devices/system/cpu/online
			#exit 0
			;;
        6|-performance)
			#adb shell -s $deviceinfo cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors
			#adb shell cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors
			adb shell "echo performance > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor"
            #exit 0
            ;;
		7|-cpu0)
			echo "***** 开启CPU0 *****"
			adb shell "echo 0 > /proc/hps/enabled"
			adb shell "echo 1 > /sys/devices/system/cpu/cpu0/online"
			#exit 0
			;;
		8|-cpu1)
			echo "***** 开启CPU1 *****"
			adb shell "echo 0 > /proc/hps/enabled"
			adb shell "echo 1 > /sys/devices/system/cpu/cpu1/online"
			#exit 0
			;;
		9|-cpu2)
			echo "***** 开启CPU2 *****"
			adb shell "echo 1 > /sys/devices/system/cpu/cpu2/online"
			#exit 0
			;;
		0|-cpu3)
			echo "***** 开启CPU3 *****"
			adb shell "echo 1 > /sys/devices/system/cpu/cpu3/online"
			#exit 0
			;;
		a|stop)
			echo "***** 退出 *****"
			exit 0 
			;;
        *)
			usage
			exit 1
			;;
        esac
    done
 	else
        echo "not inster usb!!"
    fi
}

systrace()
{
 	argv="$@"
    echo "$0 $1 $2"
 	
	local deviceinfo=`adb devices | sed -n '2p' | awk '{ print $1}'`
	if [ -n "$deviceinfo" ];then
	while true 
    do
        case "$2" in
            -systrace)
			echo "	***** 当前的频率有哪些 *****"
			adb shell cat /proc/cpufreq/cpufreq_ptpod_freq_volt
			echo "	***** 当前所选择的频率 *****"
			adb shell cat /proc/cpufreq/cpufreq_oppidx 
			echo "***** 查看当前状态有多少个CPU *****"
			adb shell cat sys/devices/system/cpu/online
            echo "***** 抓取 systrace到　*****" 
	    cd /home/billy/work/sdk/android-sdk-linux/platform-tools/systrace
	    #cd /home/billy/work/SW17W16/alps/android_mtk_o_6737_p18/external/chromium-trace
	    #./systrace.py –b 20480 –t 10 -o /home/billy/work/systrace_out_put.html audio sched gfx view wm
	    ./systrace.py –b 20480 –t 10 -o /home/billy/work/systrace_out_put.html audio sched
            exit 0
            ;;
            *)
                usage
                exit 1
                ;;
        esac
    done
 	else
        echo "not inster usb!!"
    fi

}

arm_linux_androideabi()
{
	argv="$@"
    echo "$0 $1 $2"

    while true 
    do
        case "$2" in
            -addr2line)
            echo "***** 分析定位　so库堆栈 　*****" 
	    echo "arm-linux-androideabi-addr2line -f -e so add str"
	    if [ -n "$3" ];then
	    arm-linux-androideabi-addr2line -f -e $3 $4 $5
	    else
	    echo ""
	    	cd /home/billy/work/SW17W16/alps/android_mtk_o_6737_p18/out/target/product/k37tv1_64/symbols/system/lib
	    	arm-linux-androideabi-addr2line -f -e libaaudio.so 00010d13
		arm-linux-androideabi-addr2line -f -e libaaudio.so 00011403
		arm-linux-androideabi-addr2line -f -e libaaudio.so 0000fec5
		arm-linux-androideabi-addr2line -f -e libaaudio.so 000102a7
	    	#arm-linux-androideabi-addr2line -f -e libaaudio.so 00010d13 _ZN7android2spINS_11AudioRecordEEaSEPS1_ 
	    	#arm-linux-androideabi-addr2line -f -e libaaudio.so 00011403 _ZN6aaudio16AudioStreamTrack4openERKNS_18AudioStreamBuilderE
	    	#arm-linux-androideabi-addr2line -f -e libaaudio.so 0000fec5 _ZN6aaudio18AudioStreamBuilder5buildEPPNS_11AudioStreamE
	    	#arm-linux-androideabi-addr2line -f -e libaaudio.so 000102a7 AAudioStreamBuilder_openStream
 	    echo "	
		F DEBUG   : backtrace:
		F DEBUG   :     #00 pc 000000000000d688  /system/lib64/libutils.so (_ZNK7android7RefBase9incStrongEPKv+8)
		F DEBUG   :     #01 pc 000000000006f97c  /system/lib64/libaudioclient.so (_ZN7android15TrackPlayerBase4initEPNS_10AudioTrackENS_13player_type_tE13audio_usage_t+52)
		F DEBUG   :     #02 pc 0000000000019b58  /system/lib64/libaaudio.so (_ZN6aaudio16AudioStreamTrack4openERKNS_18AudioStreamBuilderE+576)
		F DEBUG   :     #03 pc 0000000000017f08  /system/lib64/libaaudio.so (_ZN6aaudio18AudioStreamBuilder5buildEPPNS_11AudioStreamE+412)
		F DEBUG   :     #04 pc 0000000000018218  /system/lib64/libaaudio.so (AAudioStreamBuilder_openStream+76)
		F DEBUG   :     #05 pc 00000000000287a0  /data/local/tmp/CtsNativeMediaAAudioTestCases
		F DEBUG   :     #06 pc 000000000002a094  /data/local/tmp/CtsNativeMediaAAudioTestCases
		F DEBUG   :     #07 pc 0000000000016ac4  /data/local/tmp/CtsNativeMediaAAudioTestCases
		F DEBUG   :     #08 pc 000000000002fed8  /data/local/tmp/CtsNativeMediaAAudioTestCases
		F DEBUG   :     #09 pc 0000000000030f24  /data/local/tmp/CtsNativeMediaAAudioTestCases
		F DEBUG   :     #10 pc 00000000000313ac  /data/local/tmp/CtsNativeMediaAAudioTestCases
		F DEBUG   :     #11 pc 0000000000038a84  /data/local/tmp/CtsNativeMediaAAudioTestCases
		F DEBUG   :     #12 pc 000000000003864c  /data/local/tmp/CtsNativeMediaAAudioTestCases
		F DEBUG   :     #13 pc 00000000000183b4  /data/local/tmp/CtsNativeMediaAAudioTestCases
		F DEBUG   :     #14 pc 000000000001b668  /system/lib64/libc.so (__libc_init+88)
		F DEBUG   :     #15 pc 0000000000013fac  /data/local/tmp/CtsNativeMediaAAudioTestCases"
	    	cd /home/billy/work/SW17W16/alps/android_mtk_o_6737_p18/out/target/product/k37tv1_64/symbols/system/lib64
	    	aarch64-linux-android-addr2line -a -C -i -f -e libutils.so 000000000000d688 
	    	aarch64-linux-android-addr2line -a -C -i -f -e libaudioclient.so 000000000006f97c 
	    	aarch64-linux-android-addr2line -a -C -i -f -e libaaudio.so 0000000000019b58 
	    	aarch64-linux-android-addr2line -a -C -i -f -e libaaudio.so 0000000000017f08 
	    	aarch64-linux-android-addr2line -a -C -i -f -e libaaudio.so 0000000000018218 
	    	aarch64-linux-android-addr2line -a -C -i -f -e libc.so 000000000001b668 
		echo "
		Cmd line: /vendor/bin/hw/android.hardware.audio@2.0-service-mediatek
		ABI: 'arm'

		'audio@2.0-servi' sysTid=304
		#00 pc 00049748  /system/lib/libc.so (__ioctl+8)
  		#01 pc 0001ddaf  /system/lib/libc.so (ioctl+38)
  		#02 pc 000100f3  /system/lib/vndk-sp/libhwbinder.so (_ZN7android8hardware14IPCThreadState14talkWithDriverEb+202)
  		#03 pc 00010201  /system/lib/vndk-sp/libhwbinder.so (_ZN7android8hardware14IPCThreadState20getAndExecuteCommandEv+8)
  		#04 pc 0001081b  /system/lib/vndk-sp/libhwbinder.so (_ZN7android8hardware14IPCThreadState14joinThreadPoolEb+38)
  		#05 pc 000012e1  /vendor/bin/hw/android.hardware.audio@2.0-service-mediatek (main+396)
  		#06 pc 00017d35  /system/lib/libc.so (__libc_init+48)
  		#07 pc 0000107c  /vendor/bin/hw/android.hardware.audio@2.0-service-mediatek (_start+96)"

		cd /home/billy/work/SW17W16/alps/android_mtk_o_6737_p18/out/target/product/k37tv1_64/symbols/system/lib
		arm-linux-androideabi-addr2line -a -C -i -f -e libc.so 00049748 
		arm-linux-androideabi-addr2line -a -C -i -f -e libc.so 0001ddaf 

		cd /home/billy/work/SW17W16/alps/android_mtk_o_6737_p18/out/target/product/k37tv1_64/symbols/system/lib/vndk-sp
		arm-linux-androideabi-addr2line -a -C -i -f -e libhwbinder.so 000100f3 
		arm-linux-androideabi-addr2line -a -C -i -f -e libhwbinder.so 00010201 
		arm-linux-androideabi-addr2line -a -C -i -f -e libhwbinder.so 0001081b 
	
		cd /home/billy/work/SW17W16/alps/android_mtk_o_6737_p18/out/target/product/k37tv1_64/symbols/vendor/bin/hw
		arm-linux-androideabi-addr2line -a -C -i -f -e android.hardware.audio@2.0-service-mediatek 000012e1 main

		cd /home/billy/work/SW17W16/alps/android_mtk_o_6737_p18/out/target/product/k37tv1_64/symbols/system/lib
		arm-linux-androideabi-addr2line -a -C -i -f -e libc.so 00017d35 

	    fi            
	    exit 0
            ;;
            *)
                usage
                exit 1
                ;;
        esac
    done

}

kernel_log_converter()
{
    while true 
    do
        case "$2" in
	   -i)
		s=`python ~/bin/shell_test/kernel_log_converter.py $2 $3 $4 $5`
		echo "python ~/bin/kernel_log_converter.py $@"
		echo $?
		echo ${s}
            	exit 0
            	;;
	   -h)
		s=`python ~/bin/shell_test/kernel_log_converter.py`
		echo ${s}
            	exit 0
            	;;
           *)
                usage
                exit 1
                ;;
        esac
    done
}

change_io_desk_block()
{
    #测试请求一个1G大小的文件 
    echo "time dd if=/dev/zero of=test bs=1M count=1000"
    time dd if=/dev/zero of=test bs=1M count=1000
    #IO调度算法 noop deadline [cfq]
    echo "cat /sys/block/sdx/queue/scheduler"
    cat /sys/block/sda/queue/scheduler
    cat /sys/block/sdb/queue/scheduler
    #查看磁盘的默认请求队列：
    echo "cat /sys/block/sdx/queue/nr_requests"
    cat /sys/block/sda/queue/nr_requests
    cat /sys/block/sdb/queue/nr_requests
    
    #一次读多少内容，默认128kb
    echo "cat /sys/block/sdx/queue/read_ahead_kb"
    cat /sys/block/sda/queue/read_ahead_kb
    cat /sys/block/sdb/queue/read_ahead_kb
    #blockdev –setra 来设置,setra 设置的是多少个扇区,所以实际的字节是除以2,比如设置 512 ,实际是读 256 个字节.
	echo "sdparm -s WCE(Write Cache Enable)=1,RCD(Read Cache Disable)=0 -S /dev/sdb"
	#sdparm -s WCE=1,RCD=0 -S /dev/sdb
	#sudo blockdev --setra 512 /dev/mapper/ubuntu--vg-root
	echo "sudo blockdev --setra 512 /dev/sdx"
	sudo blockdev --setra 512 /dev/sda
	sudo blockdev --setra 512 /dev/sdb
}

change_CRLF2LF()
{
	echo "linux 回车符 LF"
	echo $@
	sed -i 's/\r//g' $2
}

change_LF2CRLF()
{
	echo "window 回车符 CRLF"
	echo $@
	sed -i 's/$/\r/g' $2
}

scandir()
{
    local cur_dir parent_dir workdir
    workdir=$1
    cd ${workdir}
    if [ ${workdir} = "/" ]
    then
        cur_dir=""
    else
        cur_dir=$(pwd)
    fi

    for dirlist in $(ls ${cur_dir})
    do
        if test -d ${dirlist};then
            cd ${dirlist}
            scandir ${cur_dir}/${dirlist}
            cd ..
        else
            sed -i 's/\/\/#define LOG_NDEBUG 0/#define LOG_NDEBUG 0 \/\/billy/g' $dirlist
        fi
    done
}


enable_debug()
{
    local cur_dir
    cur_dir=$(pwd)
    CY_BUILD_ROOT_DIR=$cur_dir
    echo "**** curdir $(pwd) *******"
    echo "********* enable audio debug LOG_NDEBUG 0 **********"
    
    AudPar=vendor/mediatek/proprietary/external/AudioParamParser/AudioParamParser.h

    AudioJniDir=$CY_BUILD_ROOT_DIR/frameworks/base/core/jni
    AudioFlinger=$CY_BUILD_ROOT_DIR/frameworks/av/services/audioflinger
    AudioPolicy=$CY_BUILD_ROOT_DIR/frameworks/av/services/audiopolicy
    MediaJniDir=$CY_BUILD_ROOT_DIR/frameworks/base/media/jni
    Media=$CY_BUILD_ROOT_DIR/frameworks/av/media

    android_media_MediaDrm=$MediaJniDir/android_media_MediaDrm.cpp
    AudioStreamInternal=$Media/libaaudio/src/client/AudioStreamInternal.cpp
    AudioStreamInternalCapture=$Media/libaaudio/src/client/AudioStreamInternalCapture.cpp
    AudioStreamInternalPlay=$Media/libaaudio/src/client/AudioStreamInternalPlay.cpp
    MonoPipeReader=$Media/libnbaio/MonoPipeReader.cpp
    MonoPipe=$Media/libnbaio/MonoPipe.cpp
    Pipe=$Media/libnbaio/Pipe.cpp
    PipeReader=$Media/libnbaio/PipeReader.cpp

    AudioMixer=$Media/libaudioprocessing/AudioMixer.cpp

    grep "#define LOG_NDEBUG 0 //billy" $AudioMixer > /dev/null
    if [ $? -eq 0 ]; then
        echo "已经修改过，不用修改"
    else
        scandir $AudioJniDir
        scandir $AudioFlinger
        scandir $AudioPolicy
        scandir $MediaJniDir
        scandir $Media

        sed -i 's/i);/name\/*billy*\/);/g' $AudioMixer

        sed -i 's/\/\/\#define FORCE_DEBUG_LEVEL/\#define FORCE_DEBUG_LEVEL/g' $AudPar
        
        sed -i 's/#define LOG_NDEBUG 0 \/\/billy/\/\/#define LOG_NDEBUG 0 \/\/billy/g' $android_media_MediaDrm
        sed -i 's/#define LOG_NDEBUG 0 \/\/billy/\/\/#define LOG_NDEBUG 0 \/\/billy/g' $AudioStreamInternal
        sed -i 's/#define LOG_NDEBUG 0 \/\/billy/\/\/#define LOG_NDEBUG 0 \/\/billy/g' $AudioStreamInternalCapture
        sed -i 's/#define LOG_NDEBUG 0 \/\/billy/\/\/#define LOG_NDEBUG 0 \/\/billy/g' $AudioStreamInternalPlay
        sed -i 's/#define LOG_NDEBUG 0 \/\/billy/\/\/#define LOG_NDEBUG 0 \/\/billy/g' $MonoPipeReader
        sed -i 's/#define LOG_NDEBUG 0 \/\/billy/\/\/#define LOG_NDEBUG 0 \/\/billy/g' $MonoPipe
        sed -i 's/#define LOG_NDEBUG 0 \/\/billy/\/\/#define LOG_NDEBUG 0 \/\/billy/g' $Pipe
        sed -i 's/#define LOG_NDEBUG 0 \/\/billy/\/\/#define LOG_NDEBUG 0 \/\/billy/g' $PipeReader

        cd $cur_dir
    fi

    grep -nr billy $AudioJniDir
    grep -nr billy $AudioFlinger
    grep -nr billy $AudioPolicy
    grep -nr billy $MediaJniDir
    grep -nr billy $Media

}

quick_build()
{
  #build/core/main.mk 
  # billy add
    subdir_makefiles=$(shell cat build/tools/Android.mk.cache)
    #ifeq ($(subdir_makefiles),)
        $(warning "no cache.create build/tools/Android.mk.cache")
        $(shell build/tools/findleaves.py --prune="./out" Android.mk > build/tools/Android.mk.cache)
        subdir_makefiles=$(shell cat build/tools/Android.mk.cache)
    #else
        $(warning "use cache:build/tools/Android.mk.cache")
    #endif

}

build_mtk_android()
{
    local_dir=$PWD
    #echo $local_dir
    cd $local_dir
    export LC_ALL=C
    MK=vendor/mediatek/proprietary/hardware/interfaces/Android.mk

    O1MP7=$(pwd | grep -E "mp6|android_mtk_o1_mp7")
    P0MP1=$(pwd | grep android_mtk_p0_mp1)
    echo "** $O1MP7 $P0MP1 **"
	if [ -d "$O1MP7" ];then
		TmakeChenyee=TmakeChenyee_mp7
    elif [ -d "$P0MP1" ];then
		TmakeChenyee=TmakeChenyee_P
	else
		TmakeChenyee=TmakeChenyee
	fi
    
    echo "chose build shell $TmakeChenyee !!!! "

    while true 
    do
        case "$2" in
        -enabledebug)
            enable_debug
            exit 0
            ;;
        -fix)
            linenum=`sed -n '/touch/=' $MK`
            num=`echo ${linenum:0:3}`
            #echo $num
            s=`sed -n ''"$[num+1]"'p' $MK`
            if [ -z "$s" ];then
                #输入制表符TAB方法 ctrl+v ctrl+i
                sed -e ''"$num"'a\	@mv \$@ \$@_' -i $MK
                sed -e ''"$[num+1]"'a\	@sort \$@_ > $@' -i $MK
                sed -e ''"$[num+2]"'a\	@rm -f \$@_' -i $MK
            else
                echo "已经修复，不需要修改"
            fi
            exit 0
            ;;
        -l)
            $TmakeChenyee -l
            exit 0
            ;;
        -h)
            $TmakeChenyee -h
            exit 0
            ;;
        *)
            echo "$@"
            #echo "你的内存在使用到100-10=90%的时候，就开始出现有交换分区的使用"
            #sudo sysctl vm.swappiness=10
            #ret=`$local_dir/TmakeChenyee $2 $3 $4 $5 $6 $7 >$local_dir/all_build_result 2>$local_dir/build_error`
            #ret=`$local_dir/TmakeChenyee $2 $3 $4 $5 $6 $7`
            #echo $ret 
            $TmakeChenyee $2 $3 $4 $5 $6 $7
            echo $?
            exit 0
            ;;
        esac
    done
}

adblogcat_all()
{
	echo $@
	echo "logcat -all"
    adb logcat -c 
    #adb logcat -b kernel -b main -b system -b radio -v events -v time > ~/tmp/all.log
    adb logcat -b kernel -b main -b system -v events -v time > ~/tmp/all.log
}

zip_bootanimation()
{
   #frameworks/base/data/sounds
   #frameworks/base/cmds/bootanimation/FORMAT.md
   cd ~/bin/shell_test/package/bootanimation
   zip -0qry -i \*.txt \*.png \*.wav @ ../bootanimation.zip *.txt part*
   cd -
}

adb_unlock()
{
   adb shell input keyevent 82 
}

adb_home()
{
   adb shell input keyevent 3
}
adb_break()
{
   adb shell input keyevent 4 
}

change_gcc()
{
    echo "$@"
 
    while true 
    do
        case "$2" in
          -s)
            gcc -v
            g++ -v
            cpp -v
            ls /usr/bin/gcc*
            ls /usr/bin/g++*
            ls /usr/bin/cpp*
            sudo update-alternatives --get-selections | grep gcc
            sudo update-alternatives --get-selections | grep cc
            sudo update-alternatives --get-selections | grep g++
            sudo update-alternatives --get-selections | grep c++
            sudo update-alternatives --get-selections | grep cpp
            exit 0
            ;;
          -install)
            sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 40
            sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 50
            sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 40
            sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 50
            sudo update-alternatives --install /usr/bin/cpp cpp /usr/bin/cpp-8 40
            sudo update-alternatives --install /usr/bin/cpp cpp /usr/bin/cpp-7 50
            exit 0
            ;;
          -set)
            sudo update-alternatives --set cc /usr/bin/gcc
            sudo update-alternatives --set c++ /usr/bin/g++
            sudo update-alternatives --set cpp /usr/bin/cpp
            exit 0
            ;;
          -config)
            #sudo update-alternatives --config cc
            sudo update-alternatives --config gcc
            #sudo update-alternatives --config c++
            read
            sudo update-alternatives --config g++
            read
            sudo update-alternatives --config cpp
            read
            exit 0
            ;;
          -remove)
            sudo update-alternatives --remove gcc /usr/bin/gcc-8
            sudo update-alternatives --remove g++ /usr/bin/g++-8
            exit 0
            ;;
          *)
            printf "
              --install <链接> <名称> <路径> <优先级>
              --auto <名称>            将 <名称> 的主链接切换到自动模式。
              --remove <名称> <路径>   从 <名称> 替换组中去除 <路径> 项。
              --get-selections         列出主要候选项名称以及它们的状态。
              --set-selections         从标准输入中读入候选项的状态。
              --config <名称>          列出 <名称> 替换组中的可选项，并就使用其中
                                         哪一个，征询用户的意见。
              --set <名称> <路径>      将 <路径> 设置为 <名称> 的候选项。
            "
            echo "$0 -change -s|-install|-set|-remove|-config "
            exit 0
            ;;
        esac
    done

}

scandir()
{
    local cur_dir parent_dir workdir
    workdir=$1
    cd ${workdir}
    if [ ${workdir} = "/" ]
    then
        cur_dir=""
    else
        cur_dir=$(pwd)
    fi

    for dirlist in $(ls ${cur_dir})
    do
        if test -d ${dirlist};then
            cd ${dirlist}
            scandir ${cur_dir}/${dirlist}
            cd ..
        else
            while true
            do
                case "$2" in
                    -enable)
                        sed -i 's/\/\/#define LOG_NDEBUG 0/#define LOG_NDEBUG 0 \/\/billy/g' $dirlist
                        exit 0
                        ;;
                    -disable)
                        sed -i 's/#define LOG_NDEBUG 0 \/\/billy/\/\/#define LOG_NDEBUG 0/g' $dirlist
                        exit 0
                        ;;
                    *)
                        exit 1
                        ;;
                esac
            done
        fi
    done
}

change_audio_LOG_NDEBUG()
{
    local cur_dir
    cur_dir=$(pwd)
    CY_BUILD_ROOT_DIR=$cur_dir
    echo "**** curdir $(pwd) *******"
    echo "********* enable audio debug LOG_NDEBUG 0 **********"
    AudioJniDir=$CY_BUILD_ROOT_DIR/frameworks/base/core/jni
    AudioFlinger=$CY_BUILD_ROOT_DIR/frameworks/av/services/audioflinger
    AudioPolicy=$CY_BUILD_ROOT_DIR/frameworks/av/services/audiopolicy
    MediaExtractor=$CY_BUILD_ROOT_DIR/frameworks/av/services/mediaextractor
    MediaJniDir=$CY_BUILD_ROOT_DIR/frameworks/base/media/jni
    Media=$CY_BUILD_ROOT_DIR/frameworks/av/media

    android_media_MediaDrm=$MediaJniDir/android_media_MediaDrm.cpp
    AudioStreamInternal=$Media/libaaudio/src/client/AudioStreamInternal.cpp
    AudioStreamInternalCapture=$Media/libaaudio/src/client/AudioStreamInternalCapture.cpp
    AudioStreamInternalPlay=$Media/libaaudio/src/client/AudioStreamInternalPlay.cpp
    MonoPipeReader=$Media/libnbaio/MonoPipeReader.cpp
    MonoPipe=$Media/libnbaio/MonoPipe.cpp
    Pipe=$Media/libnbaio/Pipe.cpp
    PipeReader=$Media/libnbaio/PipeReader.cpp

    AudioMixer=$Media/libaudioprocessing/AudioMixer.cpp
    SpeechType=$CY_BUILD_ROOT_DIR/vendor/mediatek/proprietary/hardware/audio/common/include/SpeechType.h

    while true
    do
        case "$2" in
                -enable)
                    grep "#define LOG_NDEBUG 0 //billy" $AudioMixer > /dev/null
                    if [ $? -eq 0 ]; then
                        echo "已经修改过，不用修改"
                        exit 0
                    fi
                    ;;
                -disable)
                    grep "//#define LOG_NDEBUG 0" $AudioMixer > /dev/null
                    if [ $? -eq 0 ]; then
                        echo "已经修改过，不用修改"
                        exit 0
                    fi
                    ;;
                *)
                    exit 1
                    ;;
                esac
    done

    scandir $AudioJniDir
    scandir $AudioFlinger
    scandir $AudioPolicy
    scandir $MediaExtractor
    scandir $MediaJniDir
    scandir $Media

    #sed -i 's/#if 0 \/\/ for/#if 1 \/\/ billy for/g' $SpeechType
    sed -i 's/#if 1 \/\/ billy for/#if 0 \/\/ for/g' $SpeechType
    cd $cur_dir

}

get_opts()
{
    argv="$@"

	#echo $argv $? $1
	
	#opts=$(getopt ,  -- "$@")
	
	#if [ $? -ne 0 ];then
    #    usage
    #    exit 1
    #fi

	#eval set -- "$opts"
    while true 
    do
        case "$1" in
			-h|--help)
                usage
                exit 0
                ;;
            -l|--listp)
				echo "perl listP.pl"
                perl listP.pl
                shift
                exit 0
                ;;
			-n)
				new "$@"
				exit 0
				;;
			-m)
				autommitest "$@"
				exit 0
				;;
			-c)
				cpu_freq "$@"
				exit 0
				;;
			-d)
				dmidecode "$@"
				exit 0
				;;
			-f)
				ftrace "$@"
				exit 0
				;;
			-analyze)
				analyze_ftrace "$@"
				exit 0
				;;
			-html)
				systrace "$@"
				exit 0
				;;
			-so)
				arm_linux_androideabi "$@"
				exit 0
				;;
			-io)
				change_io_desk_block "$@"
				exit 0
				;;
			-win)
				change_CRLF2LF "$@"
				exit 0
				;;
			-lin)
				change_LF2CRLF "$@"
				exit 0
				;;
			-down)
				down_mtk_code "$@"
				exit 0
				;;
			-grep)
				grep_audio_log "$@"
				exit 0
				;;
			-converter)
				kernel_log_converter "$@"
				exit 0
				;;
			-reset)
				reset_code "$@"
				exit 0
				;;
			-android)
				android_8_build_env "$@"
				exit 0
				;;
			-build)
				build_mtk_android "$@"
				exit 0
				;;
            -uex)
                UltralEdit_crack "$@"
                exit 0
                ;;
            -adb)
                adblogcat_all "$@"
                exit 0
                ;;
            -zip)
                zip_bootanimation "$@"
                exit 0
                ;;
            -unlock)
                adb_unlock "$@"
                exit 0
                ;;
            -home)
                adb_home "$@"
                exit 0
                ;;
            -break)
                adb_break "$@"
                exit 0
                ;;
            -gcc)
                change_gcc "$@"
                exit 0
                ;;
            -LOG_NDEBUG)
                change_audio_LOG_NDEBUG "$@"
                exit 0
                ;;
            *)
                usage
                exit 1
                ;;
        esac
    done


}

main()
{
	get_opts "$@"
}

main $@
